<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

       <context:component-scan base-package="com.scienjus" />

       <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
              <property name="locations">
                     <list>
                            <value>classpath:config.properties</value>
                     </list>
              </property>
       </bean>

       <mvc:annotation-driven>
              <mvc:argument-resolvers>
                     <!--配置注入登录用户的解析器-->
                     <bean id="currentUserMethodArgumentResolver" class="com.scienjus.authorization.resolvers.CurrentUserMethodArgumentResolver">
                            <!--需要解析的用户类-->
                            <property name="userModelClass" value="com.scienjus.domain.User" />
                            <!--查询用户的bean-->
                            <property name="userModelRepository" ref="userRepository" />
                     </bean>
              </mvc:argument-resolvers>
       </mvc:annotation-driven>

       <!--通过Key获得对应用户的bean-->
       <bean id="userRepository" class="com.scienjus.repository.UserRepository" />


       <mvc:interceptors>
              <!--身份验证的拦截器-->
              <bean id="authorizationInterceptor" class="com.scienjus.authorization.interceptor.AuthorizationInterceptor">
                     <!--验证信息存储的Http头-->
                     <property name="httpHeaderName" value="authorization" />
                     <!--验证信息通用前缀，例如Bearer-->
                     <property name="httpHeaderPrefix" value="" />
                     <!--验证失败时的错误信息-->
                     <property name="unauthorizedErrorMessage" value="令牌失效，请重新登录" />
                     <!--管理验证信息的bean-->
                     <property name="manager" ref="tokenManager" />
              </bean>
       </mvc:interceptors>


       <!--Redis客户端-->
       <bean id="redis" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
              <property name="hostName" value="${redis.host}" />
              <property name="port" value="${redis.port}" />
              <property name="password" value="${redis.password}" />
       </bean>

       <!--管理验证信息的bean-->
       <bean id="tokenManager" class="com.scienjus.authorization.manager.impl.RedisTokenManager">
              <!--Token失效时间-->
              <property name="tokenExpireSeconds" value="3600" />
              <!--Redis客户端-->
              <property name="redis" ref="redis" />
       </bean>
</beans>